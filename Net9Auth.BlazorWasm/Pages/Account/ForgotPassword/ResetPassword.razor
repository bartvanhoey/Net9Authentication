@page "/Account/ResetPassword"
@using Net9Auth.BlazorWasm.Services.Authentication.ResetPassword
@using Net9Auth.Shared.Models.Authentication.ResetPassword
@inject NavigationManager NavigationManager
@inject IResetPasswordService ResetPasswordService


<PageTitle>Reset password</PageTitle>


<hr />
<div class="row">
    <div class="col-md-6">
        <StatusMessage Message="@Message" />
        <EditForm Model="Input" FormName="reset-password" OnValidSubmit="OnValidSubmitAsync" method="post">
            <DataAnnotationsValidator />
            <ValidationSummary class="text-danger" role="alert" />
            <h2>Reset your password</h2>
            <hr>
            <input type="hidden" name="Input.Code" value="@Input.Code" />
            <div class="form-floating mb-3">
                <InputText id="email" @bind-Value="Input.Email" class="form-control" autocomplete="username"
                    aria-required="true" />
                <label for="email" class="form-label">Email</label>
                <ValidationMessage For="() => Input.Email" class="text-danger" />
            </div>
            <div class="form-floating mb-3">
                <InputText id="password" type="password" @bind-Value="Input.Password" class="form-control"
                    autocomplete="new-password" aria-required="true" placeholder="Please enter your password." />
                <label for="password" class="form-label">Password</label>
                <ValidationMessage For="() => Input.Password" class="text-danger" />
            </div>
            <div class="form-floating mb-3">
                <InputText id="confirm-password" type="password" @bind-Value="Input.ConfirmPassword"
                    class="form-control" autocomplete="new-password" aria-required="true"
                    placeholder="Please confirm your password." />
                <label for="confirm-password" class="form-label">Confirm password</label>
                <ValidationMessage For="() => Input.ConfirmPassword" class="text-danger" />
            </div>
            <button type="submit" class="w-100 btn btn-lg btn-primary">Reset</button>
        </EditForm>
    </div>
</div>

@code {
    [SupplyParameterFromForm]
    // ReSharper disable once AutoPropertyCanBeMadeGetOnly.Local
    private ResetPasswordInputModel Input { get; set; } = new();
    [SupplyParameterFromQuery]
    // ReSharper disable once UnusedAutoPropertyAccessor.Local
    private string? Code { get; set; }
    // ReSharper disable once UnusedAutoPropertyAccessor.Local
    public string? Message { get; set; }

    protected override void OnInitialized()
    {
        if (Code == null) NavigationManager.NavigateTo("Account/InvalidPasswordReset");
        Input.Code = Code!;
    }

    private async Task OnValidSubmitAsync()
    {
        var result = await ResetPasswordService.ResetPasswordAsync(Input);
        if (result.Succeeded)
        {
            NavigationManager.NavigateTo("Account/ResetPasswordConfirmation");
            return;
        }
        else
        {
            NavigationManager.NavigateTo("Account/InvalidPasswordReset");
        }

    }
}